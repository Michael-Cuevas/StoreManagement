@page "/createproduct"
@using StoreManagement.Models
@inject HttpClient Http

<h3>Create New Product</h3>

<EditForm Model="newProduct" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="newProduct.Name" />
    </div>

    <div>
        <label for="description">Description:</label>
        <InputText id="description" @bind-Value="newProduct.Description" />
    </div>

    <div>
        <label for="cost">Cost:</label>
        <InputNumber id="cost" @bind-Value="newProduct.Cost" />
    </div>

    <div>
        <label for="price">Price:</label>
        <InputNumber id="price" @bind-Value="newProduct.Price" />
    </div>

    <div>
        <button type="submit">Create</button>
    </div>
</EditForm>

@code {
    private Product newProduct = new Product();

    private async Task HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync("https://localhost:7005/products", newProduct);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/fetchproducts");
        }
        else
        {
            // TODO: handle error
        }
    }

    [Inject]
    private NavigationManager Navigation { get; set; }
}
